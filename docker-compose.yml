version: "3.1"

networks:
  default:
    driver: bridge

services:
  identityserver:
    image: identityserver
    build:
      context: ./Identityserver
      dockerfile: src/Dockerfile
    environment:
      - ASPNETCORE_URLS=https://+:4430;http://+:8080
      #demo https certificate details
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/run/secrets/san_certkey
      #end of development certificate details
    ports:
      - "8080:8080"
      - "4430:4430"
    networks:
     - default
    secrets:
     - source: san_certkey  

  movieswebapp:
    image: movieswebapp
    build:
      context: ./MoviesWebApp
      dockerfile: src/Dockerfile
    environment:
      - ASPNETCORE_URLS=https://+:4431;http://+:8081
      #demo https certificate details
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/run/secrets/san_certkey
      #end of development certificate details
    ports:
      - "8081:8081"
      - "4431:4431"
    networks:
     - default
    secrets:
     - source: san_certkey  

  singlepageapp:
    image: singlepageapp
    build:
      context: ./SPA
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_URLS=https://+:4432;http://+:8082
      #demo https certificate details
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/run/secrets/san_certkey
      #end of development certificate details
    ports:
      - "8082:8082"
      - "4432:4432"
    networks:
     - default
    secrets:
     - source: san_certkey  

  productapi:
    image: productapi
    build:
      context: ./ProductAPI
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_URLS=https://+:4433;http://+:8083
      #demo https certificate details
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/run/secrets/san_certkey
      #end of development certificate details
    ports:
      - "8083:8083"
      - "4433:4433"
    networks:
     - default  
    secrets:
     - source: san_certkey     
  
  shibboleth:
    build: ./Shibboleth/
    depends_on: 
      - ldap
    environment:
     - JETTY_MAX_HEAP=64m
     - JETTY_BROWSER_SSL_KEYSTORE_PASSWORD=password
     - JETTY_BACKCHANNEL_SSL_KEYSTORE_PASSWORD=password
    ports:
     - "8090:8080"
    networks:
     - default
    secrets:
     - source: idp_backchannel
     - source: idp_browser
     - source: idp_encryption
     - source: idp_signing
     - source: idp_sealer     
   
  ldap:
    build: ./ldap/
    networks:
     - default
    ports:
      - "389:389"

  opaserver:
    image: openpolicyagent/opa:latest
    ports:
      - 8181:8181
    # WARNING: OPA is NOT running with an authorization policy configured. This
    # means that clients can read and write policies in OPA. If you are
    # deploying OPA in an insecure environment, be sure to configure
    # authentication and authorization on the daemon. See the Security page for
    # details: https://www.openpolicyagent.org/docs/security.html.
    environment:
      - OPA_LOG_TIMESTAMP_FORMAT="2006-01-02T15:04:05.999999999Z07:00"
    command:
      - "run"
      - "-l"
      - "debug"
      - "--server"
      - "/opa.rego"
    volumes:
    - ./OPA/opa.rego:/opa.rego
    networks:
     - default  

secrets:
  idp_backchannel:
    file: ./secrets/idp/idp-backchannel.p12
  idp_browser:
    file: ./secrets/idp/idp-browser.p12
  idp_encryption:
    file: ./secrets/idp/idp-encryption.key
  idp_signing:
    file: ./secrets/idp/idp-signing.key
  idp_sealer:
    file: ./secrets/idp/sealer.jks
  ssp_key:
    file: ./secrets/simplesamlphp/server.pem
  sp_key:
    file: ./secrets/sp/sp-key.pem
  san_certkey:
    file: ./secrets/idp/ModernACRestSan.pfx
